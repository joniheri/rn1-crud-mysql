{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rizkytanjung/jon/JN/PROJECT REACT NATIVE/RN1_CRUD_MYSQL/client/src/pages/Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport Headers from \"../component/Header\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { API } from \"../config/Api\";\nexport default function Home(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      todo = _useState2[0],\n      setTodo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    getTodo();\n  }, []);\n\n  var getTodo = function getTodo() {\n    var response;\n    return _regeneratorRuntime.async(function getTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            setIsLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(API.get(\"/todos\"));\n\n          case 4:\n            response = _context.sent;\n            setTodo(response.data.data);\n            setIsLoading(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            setIsLoading(false);\n            console.log(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var _renderItem = function _renderItem(_ref) {\n    var item = _ref.item;\n    return React.createElement(ListItem, {\n      onPress: function onPress() {\n        return props.navigation.navigate(\"Detail Todo\", item);\n      },\n      key: item.id.toString(),\n      bottomDivider: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(Avatar, {\n      rounded: true,\n      title: item.title.slice(0, 2),\n      containerStyle: {\n        backgroundColor: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(ListItem.Title, {\n      h4: true,\n      numberOfLines: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, item.title), React.createElement(ListItem.Subtitle, {\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, item.description), item.status === \"Done\" && React.createElement(ListItem.Subtitle, {\n      style: {\n        color: \"#05f240\"\n      },\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, item.status), item.status === \"Progress\" && React.createElement(ListItem.Subtitle, {\n      style: {\n        color: \"#cc9e08\"\n      },\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, item.status)));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      padding: 16,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, React.createElement(Headers, {\n    title: \"List Todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"Add Todo\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: Style.btnAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Add Todo\"))), React.createElement(View, {\n    style: Style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: todo,\n    renderItem: _renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    refreshing: isLoading,\n    onRefresh: getTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })))));\n}\nvar Style = StyleSheet.create({\n  btnAdd: {\n    backgroundColor: \"#10bbeb\",\n    padding: 7,\n    color: \"white\",\n    borderRadius: 6\n  },\n  container: {\n    flexDirection: \"row\"\n  },\n  checkbox: {\n    flexDirection: \"column\"\n  }\n});","map":{"version":3,"sources":["/home/rizkytanjung/jon/JN/PROJECT REACT NATIVE/RN1_CRUD_MYSQL/client/src/pages/Home.js"],"names":["React","useState","useEffect","ListItem","Avatar","Headers","API","Home","props","todo","setTodo","isLoading","setIsLoading","getTodo","get","response","data","console","log","_renderItem","item","navigation","navigate","id","toString","title","slice","backgroundColor","description","status","color","flexDirection","justifyContent","padding","alignItems","Style","btnAdd","container","StyleSheet","create","borderRadius","checkbox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  FlatList,\n} from \"react-native\";\nimport { ListItem, Avatar } from \"react-native-elements\";\nimport Headers from \"../component/Header\";\nimport { ScrollView } from \"react-native\";\n\n// import config\nimport { API } from \"../config/Api\";\n\nexport default function Home(props) {\n  const [todo, setTodo] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getTodo();\n  }, []);\n  const getTodo = async () => {\n    try {\n      setIsLoading(true);\n      const response = await API.get(\"/todos\");\n      // console.log(\"DataTodos: \", response.data);\n      setTodo(response.data.data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error);\n    }\n  };\n\n  const _renderItem = ({ item }) => {\n    return (\n      <ListItem\n        onPress={() => props.navigation.navigate(\"Detail Todo\", item)}\n        key={item.id.toString()}\n        bottomDivider\n      >\n        <Avatar\n          rounded\n          title={item.title.slice(0, 2)}\n          containerStyle={{ backgroundColor: \"black\" }}\n        />\n        <ListItem.Content>\n          <ListItem.Title h4 numberOfLines={1}>\n            {item.title}\n          </ListItem.Title>\n          <ListItem.Subtitle numberOfLines={2}>\n            {item.description}\n          </ListItem.Subtitle>\n          {item.status === \"Done\" && (\n            <ListItem.Subtitle style={{ color: \"#05f240\" }} numberOfLines={2}>\n              {item.status}\n            </ListItem.Subtitle>\n          )}\n          {item.status === \"Progress\" && (\n            <ListItem.Subtitle style={{ color: \"#cc9e08\" }} numberOfLines={2}>\n              {item.status}\n            </ListItem.Subtitle>\n          )}\n        </ListItem.Content>\n      </ListItem>\n    );\n  };\n\n  return (\n    <>\n      <ScrollView>\n        <View>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              padding: 16,\n              alignItems: \"center\",\n            }}\n          >\n            <Headers title=\"List Todo\" />\n            <TouchableOpacity\n              onPress={() => props.navigation.navigate(\"Add Todo\")}\n            >\n              <Text style={Style.btnAdd}>Add Todo</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={Style.container}>\n            <FlatList\n              data={todo}\n              renderItem={_renderItem}\n              keyExtractor={(item) => item.id.toString()}\n              refreshing={isLoading}\n              onRefresh={getTodo}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    </>\n  );\n}\n\nconst Style = StyleSheet.create({\n  btnAdd: {\n    backgroundColor: \"#10bbeb\",\n    padding: 7,\n    color: \"white\",\n    borderRadius: 6,\n  },\n  container: {\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    flexDirection: \"column\",\n    //alignSelf: \"flex-end\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}