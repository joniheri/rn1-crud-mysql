{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rizkytanjung/jon/JN/PROJECT REACT NATIVE/RN1_CRUD_MYSQL/client/src/pages/UpdateTodo.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { API } from \"../config/Api\";\nimport Headers from \"../component/Header\";\nexport default function UpdateTodo(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isError = _React$useState6[0],\n      setIsError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      title = _React$useState8[0],\n      setTitle = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      status = _React$useState10[0],\n      setStatus = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      description = _React$useState12[0],\n      setDescription = _React$useState12[1];\n\n  var dataTodo = {\n    id: props.route.params.id,\n    title: props.route.params.title,\n    description: props.route.params.description,\n    status: props.route.params.status\n  };\n\n  var updateTodo = function updateTodo() {\n    return _regeneratorRuntime.async(function updateTodo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {} catch (error) {\n              setIsError(true);\n              setIsLoading(false);\n              console.log(error);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Headers, {\n    title: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: dataTodo.title,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Headers, {\n    title: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      marginTop: 10,\n      marginBottom: 10,\n      borderWidth: 0.5,\n      height: 100,\n      width: \"100%\",\n      padding: 6,\n      borderRadius: 5\n    },\n    value: dataTodo.description,\n    onChangeText: function onChangeText(text) {\n      return setDescription(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(Headers, {\n    title: \"Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: dataTodo.status,\n    onChangeText: function onChangeText(text) {\n      return setStatus(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), isError && React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, error && React.createElement(Text, {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, error)), React.createElement(TouchableOpacity, {\n    style: styles.btnSave,\n    onPress: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 17\n  },\n  content: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 15,\n    borderRadius: 5,\n    borderWidth: 0.5,\n    height: 40,\n    width: \"100%\",\n    padding: 6\n  },\n  btnSave: {\n    width: \"100%\",\n    backgroundColor: \"#10bbeb\",\n    marginTop: 20,\n    padding: 10,\n    alignSelf: \"center\",\n    borderRadius: 5\n  }\n});","map":{"version":3,"sources":["/home/rizkytanjung/jon/JN/PROJECT REACT NATIVE/RN1_CRUD_MYSQL/client/src/pages/UpdateTodo.js"],"names":["React","API","Headers","UpdateTodo","props","useState","isLoading","setIsLoading","error","setError","isError","setIsError","title","setTitle","status","setStatus","description","setDescription","dataTodo","id","route","params","updateTodo","console","log","styles","container","textInput","text","marginTop","marginBottom","borderWidth","height","width","padding","borderRadius","color","btnSave","textAlign","StyleSheet","create","content","flexDirection","alignItems","backgroundColor","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Text } from \"react-native\";\nimport { TextInput, StyleSheet, View, TouchableOpacity } from \"react-native\";\n\n// import config\nimport { API } from \"../config/Api\";\n\n// import components\nimport Headers from \"../component/Header\";\n\nexport default function UpdateTodo(props) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [isError, setIsError] = React.useState(false);\n  const [title, setTitle] = React.useState(\"\");\n  const [status, setStatus] = React.useState(\"\");\n  const [description, setDescription] = React.useState(\"\");\n\n  const dataTodo = {\n    id: props.route.params.id,\n    title: props.route.params.title,\n    description: props.route.params.description,\n    status: props.route.params.status,\n  };\n\n  const updateTodo = async () => {\n    try {\n      // setIsLoading(true);\n      // const data = {\n      //   title: title,\n      //   status: status,\n      //   description: description,\n      // };\n      // console.log(\"DataInput: \", data);\n      // if (!data.title || !data.status || !data.description) {\n      //   setIsError(true);\n      //   setError(\"Please fill in all the fields\");\n      //   console.log(\"Data\", data);\n      // } else {\n      //   if (data.status !== \"Done\" && data.status !== \"Progress\") {\n      //     setIsError(true);\n      //     setError(\"Status Wajib Done atau Progress\");\n      //     console.log(\"Data\", data.status);\n      //   } else {\n      //     const response = await API.post(\"/update-todo\", data);\n      //     setError(\"Berhasil\");\n      //     setIsLoading(false);\n      //     props.navigation.navigate(\"Home\");\n      //   }\n      // }\n    } catch (error) {\n      setIsError(true);\n      setIsLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Headers title=\"Title\" />\n      <TextInput\n        style={styles.textInput}\n        value={dataTodo.title}\n        onChangeText={(text) => setTitle(text)}\n      />\n      <Headers title=\"Description\" />\n      <TextInput\n        style={{\n          marginTop: 10,\n          marginBottom: 10,\n          borderWidth: 0.5,\n          height: 100,\n          width: \"100%\",\n          padding: 6,\n          borderRadius: 5,\n        }}\n        value={dataTodo.description}\n        onChangeText={(text) => setDescription(text)}\n      />\n      <Headers title=\"Status\" />\n      <TextInput\n        style={styles.textInput}\n        value={dataTodo.status}\n        onChangeText={(text) => setStatus(text)}\n      />\n      {isError && (\n        <View>{error && <Text style={{ color: \"red\" }}>{error}</Text>}</View>\n      )}\n      <TouchableOpacity style={styles.btnSave} onPress={updateTodo}>\n        <Text style={{ color: \"#fff\", textAlign: \"center\" }}>Save</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 17,\n  },\n  content: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  textInput: {\n    marginTop: 5,\n    marginBottom: 15,\n    borderRadius: 5,\n    borderWidth: 0.5,\n    height: 40,\n    width: \"100%\",\n    padding: 6,\n  },\n  btnSave: {\n    width: \"100%\",\n    backgroundColor: \"#10bbeb\",\n    marginTop: 20,\n    padding: 10,\n    alignSelf: \"center\",\n    borderRadius: 5,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}